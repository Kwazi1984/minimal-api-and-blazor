@page "/edit-document"
@page "/edit-document/{id:int}"
@attribute [Authorize]

@inject IDocumentService DocumemntService
@inject NavigationManager NavigationManager

@if (isLoading)
{
    <ProgressBarSpinner />
}
else 
{
    <EditForm Model="doucment" Context="DocumentForm">
        
        <RadzenCard Style="width: fit-content; width:100%" Class="mt-3 mb-3 mx-auto">
            <RadzenMenu> 
                <RadzenMenuItem Text="Save" Icon="save" Click="@(async () => await ValidateForm(DocumentForm))" />
                <RadzenMenuItem Text="Cancel" Icon="close" Click="CancelButtonClick" />
            </RadzenMenu>
        </RadzenCard>

        @if (Id == null)
        {
            <h2>Create Document</h2>
        }
        else
        {
            <h2>Update Document</h2>
        }

        <DataAnnotationsValidator />
        <ValidationSummary />
  
        <div>
            <label for="index">Index</label>
            <InputText id="index" @bind-Value="doucment!.Index" class="form-control"></InputText>
        </div>
        <div>
            <label for="title">Title</label>
            <InputText id="title" @bind-Value="doucment.Title" class="form-control"></InputText>
        </div>
        <div>
            <label for="subject">Subject</label>
            <InputTextArea id="subject" @bind-Value="doucment.Subject" class="form-control" rows="6"></InputTextArea>
        </div>
        <div>
            <label for="company">Company</label>
            <InputText id="company" @bind-Value="doucment.Company" class="form-control"></InputText>
        </div>
        <div>
            <label for="date">Date</label>
            <InputDate id="date" @bind-Value="doucment.Date" class="form-control"></InputDate>
        </div>
        <div>
            <label for="amount">Amount</label>
            <InputNumber id="amount" @bind-Value="doucment.Amount" class="form-control"></InputNumber>
        </div>
        <div>
            <label for="currency">Currency</label>
            <InputSelect id="currency" @bind-Value="doucment.Currency" class="form-control">
                <option value=""></option>
                <option value="EUR">EUR</option>
                <option value="USD">USD</option>
                <option value="PLN">PLN</option>
                <option value="GBP">GBP</option>
            </InputSelect>
        </div>   
    </EditForm>
}

@code {
    string buttonText = string.Empty;
    Document? doucment = new Document();
    bool isLoading = false;

    protected override void OnInitialized()
    {
        buttonText = Id == null ? "Create" : "Update";
    }

    protected override async Task OnParametersSetAsync()
    {
        isLoading = true;

        if (Id != null)
        {
            doucment = await DocumemntService.GetDocument(Id);
        }

        isLoading = false;
    }

    protected void CancelButtonClick()
    {
        NavigationManager.NavigateTo("documents");
    }

    private async Task ValidateForm(EditContext editContext)
    {
        if (editContext.Validate())
        {
            if (Id == null)
            {
                await DocumemntService.AddDocument(doucment!);
            }
            else
            {
                await DocumemntService.UpdateDocument(doucment!);
            }

            NavigationManager.NavigateTo("documents");
        }
    }

    [Parameter]
    public int? Id { get; set; }
}
